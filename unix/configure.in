#! /bin/bash -norc
dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Snack installation
dnl	to configure the system for the local environment.
AC_INIT(../generic/snack.h)

SNACK_VERSION=2.0

#--------------------------------------------------------------------
#       See if there was a command-line option for where Tcl is;  if
#       not, assume that its top-level directory is a sibling of ours.
#--------------------------------------------------------------------

SC_PATH_TCLCONFIG

#--------------------------------------------------------------------
#       See if there was a command-line option for where Tk is;  if
#       not, assume that its top-level directory is a sibling of ours.
#--------------------------------------------------------------------

SC_PATH_TKCONFIG

#--------------------------------------------------------------------

if test "x${prefix}" = "xNONE"; then
    prefix=/usr/local
fi

SNACK_INSTALL_PATH=${prefix}/lib
SNACK_LIB_SPEC="-L${prefix}/lib -lsnack"

#--------------------------------------------------------------------
#       Read in configuration information generated by Tcl and
#	arrange for it to be substituted into our Makefile.
#--------------------------------------------------------------------

file=$TCL_BIN_DIR/tclConfig.sh
. $file

if test "$TCL_SHARED_BUILD" = 0; then
    AC_MSG_ERROR(Tcl and Tk must be configured with the --enable-shared flag)
fi
CFLAGS=$TCL_SHLIB_CFLAGS
LD_SEARCH_FLAGS=$TCL_LD_SEARCH_FLAGS
SHLIB_LD=$TCL_SHLIB_LD
SHLIB_SUFFIX=$TCL_SHLIB_SUFFIX
CC=$TCL_CC
TCLVER=$TCL_VERSION
TCLAPI=""
if test "$TCLVER" != "8.0"; then
    TCLAPI="-DTCL_81_API"
fi

#--------------------------------------------------------------------
#       Read in configuration information generated by Tk and arrange
#	for it to be substituted into our Makefile.
#--------------------------------------------------------------------

file=$TK_BIN_DIR/tkConfig.sh
. $file
XINCLUDES=$TK_XINCLUDES

#--------------------------------------------------------------------
#	Set audio related variables for the supported systems
#--------------------------------------------------------------------

system=`uname -s`-`uname -r`

AINC=""
ALIB=""

case $system in
    BSD/OS-4.*)
	AFLAG="-DOSS"
	ALIB="-lossaudio"
	AOBJ="jkAudIO_oss.o"
        ;;
    HP-UX-*.10.*)
	if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
	    CFLAGS=$CFLAGS
	else
	    CFLAGS="-Ae +z"
	fi
	AINC="-I/opt/audio/include"
	AFLAG="-DHPUX"
	ALIB="-L/opt/audio/lib -lAlib"
	AOBJ="jkAudIO_hp.o"
	;;
    IRIX*)
	AFLAG="-DIRIX"
        ALIB="-laudio"
	AOBJ="jkAudIO_sgi.o"
	;;
    IRIX64-6.*)
	AFLAG="-DIRIX"
        ALIB="-laudio"
	AOBJ="jkAudIO_sgi.o"
	;;
    Linux*)
	AFLAG="-DOSS"
	AOBJ="jkAudIO_oss.o"
	;;
    NetBSD*|OpenBSD-*)
	AFLAG="-DOSS"
	ALIB="-lossaudio"
	AOBJ="jkAudIO_oss.o"
        ;;
    FreeBSD-*)
	AFLAG="-DOSS"
	ALIB=""
	AOBJ="jkAudIO_oss.o"
        ;;
    SunOS*)
	AFLAG="-DSolaris"
	AOBJ="jkAudIO_sun.o"
	;;
    *)
	AFLAG="-DOTHER"
	AOBJ="jkAudIO_skel.o"
	;;
esac

#--------------------------------------------------------------------
#	Get plug-in install path if needed
#--------------------------------------------------------------------

AC_ARG_ENABLE(plugin,[  --enable-plugin         enable plug-in],,enableval="no")

if test "$enableval" != "no"; then
  AC_MSG_CHECKING(Mozilla Home)
# Check for Mozilla home (install directory of netscape (plugins))
  AC_ARG_WITH(mozilla, [  --with-mozilla=DIR      will install in DIR/tclplug/2.0/],
	MOZILLA_DIR=$withval, MOZILLA_DIR="$MOZILLA_HOME")
  if test -z "$MOZILLA_DIR"; then
    MOZILLA_DIR=/usr/local/lib/netscape
  fi
  if test ! -d "$MOZILLA_DIR"; then
    AC_MSG_ERROR(Mozilla home directory \"$MOZILLA_DIR\" doesn't exist: use configure --with-mozilla=MOZILLA_HOME - ie. --with-mozilla=$HOME/.netscape for a personal install)
  fi
  AC_MSG_RESULT(found. Will install plugin in \"$MOZILLA_DIR\")
  AC_SUBST(MOZILLA_DIR)
else
  AC_MSG_RESULT(will not install as plugin (normal))
fi

#--------------------------------------------------------------------
#	Get the path to the NIST/SPHERE distribution. This is
#	only necessary if you want to build the NIST package.
#--------------------------------------------------------------------

LIBNIST=""
AC_ARG_WITH(nist,[  --with-nist=DIR         use NIST/SPHERE libraries from DIR],
        NIST_DIR=$withval, NIST_DIR="")
NISTINC="-I$NIST_DIR/include"
NISTLIBS="$NIST_DIR/lib/libsp.a $NIST_DIR/lib/libutil.a"
if test ! "$NIST_DIR" = ""; then
  LIBNIST="libsnacksphere${SHLIB_SUFFIX}"
fi
#--------------------------------------------------------------------

#--------------------------------------------------------------------
#	Disable stub support. This is necessary if you
#	want to run Snack with Tcl/Tk 8.0 up to 8.0.5
#--------------------------------------------------------------------

AC_ARG_ENABLE(stubs,[  --disable-stubs         disable stub support],,enableval2="no")

if test "$enableval2" = "no"; then
    AC_MSG_RESULT(will use stubs (normal))
    CFLAGS="$CFLAGS -DUSE_TCL_STUBS -DUSE_TK_STUBS"
    TCL_LIB_SPEC="${TCL_STUB_LIB_SPEC}"
    TK_LIB_SPEC="${TK_STUB_LIB_SPEC}"
    STUBINITOBJ="snackStubInit.o"
    DOSTUBLIB="stublib"
    SNACK_STUB_LIB_FLAG="-lsnackstub$SNACK_VERSION"
    if test "$TCLVER" = "8.0"; then
        AC_MSG_WARN("You probably forgot to specify --disable-stubs")
    fi
else
    AC_MSG_RESULT(will not use stubs)
    if test "$TCLVER" != "8.0"; then
	STUBINITOBJ="snackStubInit.o"
    else
	STUBINITOBJ=""
    fi
    DOSTUBLIB=""
    SNIST_LIB_SPEC="-lsnack"
fi
#--------------------------------------------------------------------

AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(XINCLUDES)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TCL_SRC_DIR)
AC_SUBST(TK_SRC_DIR)
AC_SUBST(TK_LIBS)
AC_SUBST(SNACK_INSTALL_PATH)
AC_SUBST(SNACK_LIB_SPEC)
AC_SUBST(AINC)
AC_SUBST(AFLAG)
AC_SUBST(ALIB)
AC_SUBST(AOBJ)
AC_SUBST(NISTINC)
AC_SUBST(NISTLIBS)
AC_SUBST(LIBNIST)
AC_SUBST(TCLAPI)
AC_SUBST(LD_SEARCH_FLAGS)
AC_SUBST(TCLVER)
AC_SUBST(STUBINITOBJ)
AC_SUBST(DOSTUBLIB)
AC_SUBST(SNACK_STUB_LIB_FLAG)
AC_SUBST(SNACK_VERSION)

AC_OUTPUT(Makefile snackConfig.sh)
