# Commands covered: sound creation
#

package require -exact snack 1.7

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

test sound-1.1 {sound command, create with automatic name} {
  set s [snack::sound]
  $s destroy
  set s
} sound1

test sound-1.2 {sound command, create with specified name} {
  set s [snack::sound snd]
  $s destroy
  set s
} snd

test sound-1.3 {sound command, bad args} {
    list [catch {snack::sound snd -junk} msg] $msg
} {1 {bad option "-junk": must be -load, -file, -frequency, -channels, -format, -channel, -byteorder, -buffersize, -skiphead, -debug, -guessproperties, or -fileformat}}

test sound-1.4 {sound command, with specified properties} {
  set s [snack::sound snd -frequency 8000 -channels 2 -format mulaw]
  set res [$s info]
  $s destroy
  set res
} {0 8000 0 0 Mulaw 2 RAW 0}

test sound-1.5 {sound command, with specified properties #2} {
  set s [snack::sound snd -format Lin8offset]
  set res [$s info]
  $s destroy
  set res
} {0 16000 128 128 Lin8offset 1 RAW 0}

test sound-1.6 {sound command, with specified properties #3} {
  set s [snack::sound snd -format Lin8]
  set res [$s info]
  $s destroy
  set res
} {0 16000 0 0 Lin8 1 RAW 0}

test sound-1.7 {sound command, with faulty encoding format property} {
  list [catch {snack::sound snd -format junk} msg] $msg
} {1 {Unknown format}}

test sound-1.8 {sound command, with faulty channels property} {
  list [catch {snack::sound snd -channels 0} msg] $msg
} {1 {Number of channels must be >= 1}}

test sound-1.9 {sound command, with initial file read} {
  set s [snack::sound snd -load ex1.wav]
  set res [$s info]
  $s destroy
  set res
} {15820 16000 14264 -8288 Lin16 1 WAV 44}

test sound-1.10 {sound command, with initial file link} {
  set s [snack::sound snd -file ex1.wav]
  set res [$s info]
  $s destroy
  set res
} {15820 16000 0 0 Lin16 1 WAV 44}

test sound-1.11 {sound command, create new replacing old} {
  set s [snack::sound snd -load ex1.wav]
  set s [snack::sound snd]
  set res [$s info]
  $s destroy
  set res
} {0 16000 0 0 Lin16 1 RAW 0}

test sound-1.12 {sound command, two sounds in different interpreters with same name} {
  set s1 [snack::sound snd -load ex1.wav]

  set i [interp create]
  $i eval package require -exact snack 1.7
  $i eval snack::sound snd
  $i eval snd destroy
  interp delete $i

  set res [$s info]
  $s destroy
  set res
} {15820 16000 14264 -8288 Lin16 1 WAV 44}

# cleanup
::tcltest::cleanupTests
return
